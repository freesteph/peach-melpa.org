From f38d017c711fc18a2bf522950ee9b73c43145d2b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?St=C3=A9phane=20Maniaci?= <stephane.maniaci@gmail.com>
Date: Fri, 13 Mar 2020 09:10:26 +0000
Subject: [PATCH] fix: restore the theme route

Not that I care so much about SEO but it's semantically better to
hoist the theme gallery at /theme/:id and move the specific variant
into a GET parameter. This means consolidated pages and a better view
of how well a theme performs on the website.
---
 Guardfile                                     |  4 ++
 app/controllers/themes_controller.rb          | 39 +++++++++++++++++--
 app/controllers/variants_controller.rb        | 39 -------------------
 app/views/themes/index.html.haml              |  2 +-
 app/views/{variants => themes}/show.html.haml |  8 ++--
 config/routes.rb                              |  5 +--
 spec/factories/screenshots.rb                 |  8 ++++
 spec/requests/themes_spec.rb                  | 21 ++++++++++
 8 files changed, 75 insertions(+), 51 deletions(-)
 delete mode 100644 app/controllers/variants_controller.rb
 rename app/views/{variants => themes}/show.html.haml (58%)
 create mode 100644 spec/requests/themes_spec.rb

diff --git a/Guardfile b/Guardfile
index a9b6b49..386167c 100644
--- a/Guardfile
+++ b/Guardfile
@@ -47,6 +47,7 @@ guard :rspec, cmd: 'bundle exec rspec -f doc', notification: false do
 
   watch(rails.controllers) do |m|
     [
+      rspec.spec.call('requests'),
       rspec.spec.call("routing/#{m[1]}_routing"),
       rspec.spec.call("controllers/#{m[1]}_controller"),
       rspec.spec.call("acceptance/#{m[1]}")
@@ -58,6 +59,9 @@ guard :rspec, cmd: 'bundle exec rspec -f doc', notification: false do
   watch(rails.routes)          { "#{rspec.spec_dir}/routing" }
   watch(rails.app_controller)  { "#{rspec.spec_dir}/controllers" }
 
+  # requests
+  watch(rails.controllers) { "#{rspec.spec_dir}/requests" }
+
   # Capybara features specs
   watch(rails.view_dirs)     { |m| rspec.spec.call("features/#{m[1]}") }
   watch(rails.layouts)       { |m| rspec.spec.call("features/#{m[1]}") }
diff --git a/app/controllers/themes_controller.rb b/app/controllers/themes_controller.rb
index a9cccb8..1500423 100644
--- a/app/controllers/themes_controller.rb
+++ b/app/controllers/themes_controller.rb
@@ -1,7 +1,11 @@
 # frozen_string_literal: true
 
 class ThemesController < ApplicationController
-  before_action :set_theme, only: %i[show]
+  before_action :set_theme,
+                :set_variant,
+                :set_mode,
+                :set_pagination,
+                only: %i[show]
 
   PAGE_SIZE = 12
   @lisp = Mode.find_by(name: 'Lisp')
@@ -38,16 +42,45 @@ class ThemesController < ApplicationController
   # GET /themes/1
   # GET /themes/1.json
   def show
-    # FIXME: redirect this to variants or do some transparent hoisting
+    set_page_title_for 'show',
+                       name: @theme.name,
+                       description: @theme.description
+
+    @multi = @theme.variants.length > 1
+    @screenshot = @variant.screenshots.find_by(mode: @mode)
+    @url = @theme.url.nil? ? "https://melpa.org/#/#{@theme.name}" : @theme.url
+    @title = @theme.name
   end
 
   private
 
-  # Use callbacks to share common setup or constraints between actions.
   def set_theme
     @theme = Theme.find_by(name: params[:name])
   end
 
+  def set_variant
+    @variants = @theme.variants
+    @variant =
+      @variants.find_by(name: request.params[:variant]) ||
+      @variants.first
+  end
+
+  def set_mode
+    lang = request.params[:lang] || 'lisp'
+    @mode = @modes.find_by(extension: lang) || @modes.find_by(name: 'Lisp')
+  end
+
+  def set_pagination
+    mode_index = @modes.find_index @mode
+
+    @previous_mode = @modes[mode_index - 1] unless mode_index.zero?
+    @next_mode = @modes[mode_index + 1]
+
+    index = @variants.find_index @variant
+    @previous = @variants[index - 1] unless index.zero?
+    @next = @variants[index + 1]
+  end
+
   def theme_params
     params.require(:theme).permit(:name, :version)
   end
diff --git a/app/controllers/variants_controller.rb b/app/controllers/variants_controller.rb
deleted file mode 100644
index e531a3b..0000000
--- a/app/controllers/variants_controller.rb
+++ /dev/null
@@ -1,39 +0,0 @@
-# frozen_string_literal: true
-
-class VariantsController < ApplicationController
-  before_action :set_variant, :set_mode_info, :set_other_variants_info
-
-  def show
-    set_page_title_for 'show',
-                       name: @theme.name,
-                       description: @theme.description
-
-    @multi = @theme.variants.length > 1
-    @screenshot = @variant.screenshots.find_by(mode: @mode)
-    @url = @theme.url.nil? ? "https://melpa.org/#/#{@theme.name}" : @theme.url
-  end
-
-  private
-
-  def set_other_variants_info
-    @index = @variants.find_index @variant
-    @previous = @variants[@index - 1] unless @index.zero?
-    @next = @variants[@index + 1]
-  end
-
-  def set_mode_info
-    lang = request.params[:lang] || 'lisp'
-
-    @mode = @modes.find_by(extension: lang) || @modes.find_by(name: 'Lisp')
-    @mode_index = @modes.find_index @mode
-    @previous_mode = @modes[@mode_index - 1] unless @mode_index.zero?
-    @next_mode = @modes[@mode_index + 1]
-  end
-
-  def set_variant
-    @theme = Theme.find_by(name: request.params[:theme_name])
-    @title = @theme.name
-    @variants = @theme.variants
-    @variant = @variants.find { |v| v.name == request.params[:name] }
-  end
-end
diff --git a/app/views/themes/index.html.haml b/app/views/themes/index.html.haml
index 686c484..8051d0e 100644
--- a/app/views/themes/index.html.haml
+++ b/app/views/themes/index.html.haml
@@ -5,7 +5,7 @@
         there are no themes yet. How strange.
     - @themes.each do |theme|
       .theme
-        = link_to([theme, theme.variants.first]) do
+        = link_to theme do
           %img{src: url_for(theme.preview), alt: "preview for #{theme.name}"}
           - if theme.variants.count > 1
             .multi= theme.variants.count
diff --git a/app/views/variants/show.html.haml b/app/views/themes/show.html.haml
similarity index 58%
rename from app/views/variants/show.html.haml
rename to app/views/themes/show.html.haml
index 337a7d3..cefa227 100644
--- a/app/views/variants/show.html.haml
+++ b/app/views/themes/show.html.haml
@@ -4,24 +4,24 @@
   %section.variants
     .modes.selector
       - if @previous_mode
-        = link_to "⟵", { controller: "variants", action: "show", name: @variant.name, lang: @previous_mode.extension }, {class: "button"}
+        = link_to "⟵", theme_path(@theme, lang: @previous_mode.extension, variant: @variant), class: 'button'
       - else
         = link_to "⟵", "#", { class: 'disabled button' }
       %h3.mode.button= @mode.name
       - if @next_mode
-        = link_to "⟶", { controller: "variants", action: "show", name: @variant.name, lang: @next_mode.extension }, {class: "button"}
+        = link_to "⟶", theme_path(@theme, lang: @next_mode.extension, variant: @variant), class: 'button'
       - else
         %a.button.disabled
           ⟶
     - if @multi
       .variants.selector
         - if @previous
-          = link_to "⟵", { controller: "variants", action: "show", name: @previous.name, lang: @mode.extension }, {class: "button"}
+          = link_to "⟵", theme_path(@theme, variant: @previous, lang: @mode.extension), class: 'button'
         - else
           = link_to "⟵", "#", { class: 'disabled button' }
         %h3.name.button= @variant.name
         - if @next
-          = link_to "⟶", { controller: "variants", action: "show", name: @next.name, lang: @mode.extension }, {class: "button"}
+          = link_to "⟶", theme_path(@theme, variant: @next, lang: @mode.extension), class: 'button'
         - else
           %a.button.disabled
             ⟶
diff --git a/config/routes.rb b/config/routes.rb
index 670ad25..4bac8be 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -3,8 +3,5 @@
 Rails.application.routes.draw do
   root to: 'themes#index'
 
-  resources :themes, only: [:index], param: :name do
-    resources :variants, param: :name
-  end
-  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html
+  resources :themes, only: %i[index show], param: :name
 end
diff --git a/spec/factories/screenshots.rb b/spec/factories/screenshots.rb
index 7485acc..8a48c96 100644
--- a/spec/factories/screenshots.rb
+++ b/spec/factories/screenshots.rb
@@ -4,5 +4,13 @@ FactoryBot.define do
   factory :screenshot do
     mode { Mode.first }
     variant
+
+    after(:create) do |s|
+      preview = Tempfile.new(['preview', '.png'])
+
+      `convert -size 1600x1200 xc:#{Faker::Color.hex_color} #{preview.path}`
+
+      s.image.attach(io: File.open(preview.path), filename: 'screenshot')
+    end
   end
 end
diff --git a/spec/requests/themes_spec.rb b/spec/requests/themes_spec.rb
new file mode 100644
index 0000000..683ac1f
--- /dev/null
+++ b/spec/requests/themes_spec.rb
@@ -0,0 +1,21 @@
+# frozen_string_literal: true
+
+require 'rails_helper'
+
+RSpec.describe 'Themes', type: :request do
+  describe 'GET /themes' do
+    it 'works! (now write some real specs)' do
+      get themes_path
+      expect(response).to have_http_status(200)
+    end
+  end
+
+  describe 'GET /theme/:id' do
+    let!(:theme) { create(:theme) }
+
+    it 'has a valid show route' do
+      get theme_path(theme)
+      expect(response).to have_http_status(200)
+    end
+  end
+end
-- 
2.26.0.rc2

